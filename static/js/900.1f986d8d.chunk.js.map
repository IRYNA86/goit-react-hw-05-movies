{"version":3,"file":"static/js/900.1f986d8d.chunk.js","mappings":"+QACA,EAA6B,yBAA7B,EAA6D,mBAA7D,EAA4F,wB,SCoD5F,MA9CA,WACE,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6GAEKC,EAAAA,GAAoBP,GAFzB,UAGM,KADnBQ,EAFa,QAGLC,OAHK,iDAMnBL,EAAQI,GANW,yEAQZE,EAAAA,GAAAA,MAAY,qBARA,yDAAH,qDAWpBJ,MACC,CAACN,KAOF,8BACCG,EAAKM,OAAS,GACb,eAAKE,UAAWC,EAAhB,SACGT,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,UAAhC,OACR,2BACE,gBACEC,IACEH,EAAY,UAZP,mCAYO,OAAmBA,GAAnB,UAVxB,0GAYUI,IAAI,GACJC,MAAM,MACNC,OAAO,SAET,cAAGV,UAAWC,EAAd,SAAuBI,KACvB,eAAGL,UAAWC,EAAd,wBAAuCK,OAVhCH,SAaL,oD,0MC/CdQ,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,IAAAA,IAAA,sCAAyCC,IADjC,cACzBE,EADyB,yBAGxBA,GAHwB,2CAAH,qDAMjBC,EAAa,mCAAG,WAAMC,GAAN,uFACJL,IAAAA,IAAA,gCACIC,EADJ,kBACqBI,EADrB,+CADI,cACrBF,EADqB,yBAKpBA,GALoB,2CAAH,sDAQbG,EAAW,mCAAG,WAAM5B,GAAN,uFACFsB,IAAAA,IAAA,iBAAoBtB,EAApB,oBAAwCuB,IADtC,cACnBE,EADmB,yBAGlBA,EAASI,MAHS,2CAAH,sDAKXC,EAAe,mCAAG,WAAM9B,GAAN,uFACNsB,IAAAA,IAAA,iBACXtB,EADW,4BACiBuB,IAFX,cACvBE,EADuB,yBAKtBA,EAASI,KAAK1B,MALQ,2CAAH,sDAQf4B,EAAkB,mCAAG,WAAM/B,GAAN,uFACTsB,IAAAA,IAAA,iBACXtB,EADW,4BACiBuB,IAFR,cAC1BE,EAD0B,yBAKzBA,EAASI,KAAKG,SALW,2CAAH,uD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","servises/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castImages\":\"Cast_castImages__+lEjX\",\"name\":\"Cast_name__6UbFm\",\"character\":\"Cast_character__tKDlA\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as api from 'servises/api';\nimport s from '../Cast/Cast.module.css'\n\nfunction Cast() {\n  const { moviesId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const movieCast = await api.getCastMoviesId(moviesId);\n        if (movieCast.length === 0) {\n          return;\n        }\n        setCast(movieCast);\n      } catch (error) {\n        return toast.error('Please try again');\n      }\n    };\n    fetchMovieCast();\n  }, [moviesId]);\n\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w200';\n  const defaultImg =\n    'https://st.depositphotos.com/1808604/1386/i/600/depositphotos_13860360-stock-photo-three-balalaika.jpg';\n\n  return (\n    <>\n    {cast.length > 0 ?\n      <ul  className={s.castImages}>\n        {cast.map(({ cast_id, profile_path, name, character }) => (\n          <li key={cast_id}>\n            <img\n              src={\n                profile_path ? `${baseImgUrl}${profile_path}` : `${defaultImg}`\n              }\n              alt=\"\"\n              width=\"200\"\n              height=\"250\"\n            />\n            <p className={s.name}>{name}</p>\n            <p className={s.character}>Character: {character}</p>\n          </li>\n        ))}\n      </ul> : <p>Do not have the cast</p>}\n    </>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst api_key = '255c87d9189641f6fa37fc4c55a9531c';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${api_key}`);\n  \n  return response;\n};\n\nexport const getNameImages = async nameImages => {\n  const response = await axios.get(\n    `/search/movie?api_key=${api_key}&query=${nameImages}&language=en-US&page=1&include_adult=false`\n  );\n \n  return response;\n};\n\nexport const getMoviesId = async moviesId => {\n  const response = await axios.get(`/movie/${moviesId}?api_key=${api_key}`);\n  \n  return response.data;\n};\nexport const getCastMoviesId = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${api_key}`\n  );\n  \n  return response.data.cast;\n};\n\nexport const getReviewsMoviesId = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${api_key}`\n  );\n  \n  return response.data.results;\n};"],"names":["moviesId","useParams","useState","cast","setCast","useEffect","fetchMovieCast","api","movieCast","length","toast","className","s","map","cast_id","profile_path","name","character","src","alt","width","height","axios","api_key","getTrendingMovies","response","getNameImages","nameImages","getMoviesId","data","getCastMoviesId","getReviewsMoviesId","results"],"sourceRoot":""}