{"version":3,"file":"static/js/510.cd601f99.chunk.js","mappings":"8QACA,EAAuB,0B,SCgCvB,EA9BoB,WAAO,IAAD,IAChBA,GAAaC,EAAAA,EAAAA,MAAbD,SAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,4BACE,oDACA,2BACE,eAAIC,UAAWC,EAAf,UACE,SAAC,EAAAC,QAAD,CACEC,GAAE,kBAAaT,EAAb,SACFI,MAAO,CAAEC,KAAMH,GAFjB,qBAOF,yBACE,SAAC,EAAAM,QAAD,CACEC,GAAE,kBAAaT,EAAb,YACFI,MAAO,CAAEC,KAAMH,GAFjB,8BCpBV,EAA4B,oCAA5B,EAA2E,mCAA3E,EAAuH,iCCmDvH,MAjDA,YAAuC,IAAXQ,EAAU,EAAVA,OAClBC,EACND,EADMC,GAAIC,EACVF,EADUE,YAAaC,EACvBH,EADuBG,eAAgBC,EACvCJ,EADuCI,SAAUC,EACjDL,EADiDK,aAAcC,EAC/DN,EAD+DM,OAOjE,OACE,iBAAcV,UAAWC,EAAzB,WACE,gBACEU,IAAKL,EAAW,UAPH,mCAOG,OAAmBA,GAAnB,UALpB,0GAMIM,IAAKL,KAEP,iBAAKP,UAAWC,EAAhB,WACE,wBAAKM,KACL,wCAAgBE,EAAhB,SACA,uCACA,uBAAID,KACJ,oCACAE,IAAU,wBACPA,EAAOG,KAAI,SAAAC,GACV,OACE,eAAmBd,UAAWC,EAA9B,UACE,uBAAIa,EAAMC,QADHD,EAAMT,cAdfA,I,oBCXd,EAAwB,4BAAxB,EAAgE,gCC6ChE,MApCA,WAAyB,IAAD,IACdX,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA4BsB,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KAEMrB,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAmB7C,OAjBAmB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,6GAEUC,EAAAA,GAAgB1B,GAF1B,UAEZ2B,EAFY,wDAQlBJ,EAAUI,GARQ,yEAUXC,EAAAA,GAAAA,MAAY,2BAVD,yDAAH,qDAanBH,MACC,CAACzB,KAGF,iCACA,gBAAKM,UAAWC,EAAhB,UACE,UAAC,EAAAsB,KAAD,CAAMpB,GAAIP,EAAcI,UAAWC,EAAnC,WACE,SAAC,IAAD,CAAiBuB,KAAMC,EAAAA,MADzB,cAIA,SAAC,EAAD,CAAkBrB,OAAQA,KAC1B,SAAC,EAAD,KACA,SAAC,KAAD,S,0MCzCNsB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,IAAAA,IAAA,sCAAyCC,IADjC,cACzBE,EADyB,yBAGxBA,GAHwB,2CAAH,qDAMjBC,EAAa,mCAAG,WAAMC,GAAN,uFACJL,IAAAA,IAAA,gCACIC,EADJ,kBACqBI,EADrB,+CADI,cACrBF,EADqB,yBAKpBA,GALoB,2CAAH,sDAQbG,EAAW,mCAAG,WAAMtC,GAAN,uFACFgC,IAAAA,IAAA,iBAAoBhC,EAApB,oBAAwCiC,IADtC,cACnBE,EADmB,yBAGlBA,EAASI,MAHS,2CAAH,sDAKXC,EAAe,mCAAG,WAAMxC,GAAN,uFACNgC,IAAAA,IAAA,iBACXhC,EADW,4BACiBiC,IAFX,cACvBE,EADuB,yBAKtBA,EAASI,KAAKE,MALQ,2CAAH,sDAQfC,EAAkB,mCAAG,WAAM1C,GAAN,uFACTgC,IAAAA,IAAA,iBACXhC,EADW,4BACiBiC,IAFR,cAC1BE,EAD0B,yBAKzBA,EAASI,KAAKI,SALW,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/CastReviews/CastReviews.module.css?975a","components/CastReviews/CastReviews.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsCard/MovieDetailsCard.module.css?4584","components/MovieDetailsCard/MovieDetailsCard.js","webpack://goit-react-hw-05-movies/./src/components/views/MovieDetails/MovieDetails.module.css?f65d","components/views/MovieDetails/MovieDetails.js","servises/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"CastReviews_cast__vgrwo\"};","import { NavLink, useParams, useLocation } from 'react-router-dom';\nimport s from '../CastReviews/CastReviews.module.css'\n\nconst CastReviews = () => {\n  const { moviesId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <h3>Additional information</h3>\n      <ul>\n        <li className={s.cast}>\n          <NavLink\n            to={`/movies/${moviesId}/cast`}\n            state={{ from: backLinkHref }}\n          >\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to={`/movies/${moviesId}/reviews`}\n            state={{ from: backLinkHref }}\n          >\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CastReviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieCard\":\"MovieDetailsCard_movieCard__VjfMn\",\"cardText\":\"MovieDetailsCard_cardText__B4gRx\",\"genres\":\"MovieDetailsCard_genres__ODKEv\"};","import PropTypes, { shape } from 'prop-types';\nimport s from '../MovieDetailsCard/MovieDetailsCard.module.css';\n\nfunction MovieDetailsCard({ movies }) {\n  const { id, poster_path, original_title, overview, vote_average, genres} =\n    movies;\n  \n  const baseImgURl = 'https://image.tmdb.org/t/p/w300';\n  const defaultImgUrl =\n    'https://st.depositphotos.com/1808604/1386/i/600/depositphotos_13860360-stock-photo-three-balalaika.jpg';\n\n  return (\n    <div key={id} className={s.movieCard}>\n      <img\n        src={poster_path ? `${baseImgURl}${poster_path}` : `${defaultImgUrl}`}\n        alt={original_title}\n      />\n      <div className={s.cardText}>\n        <h2>{original_title}</h2>\n        <p>User score: {vote_average} %</p>\n        <h3>Overview:</h3>\n        <p>{overview}</p>\n        <h3>Genres:</h3>\n       {genres && <ul>\n          {genres.map(genre => {\n            return (\n              <li key={genre.id} className={s.genres}>\n                <p>{genre.name}</p>\n              </li>\n            );\n          })}\n        </ul>}\n      </div>\n    </div>\n  );\n}\n\nMovieDetailsCard.propTypes = {\n  movies: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n\nexport default MovieDetailsCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"reply\":\"MovieDetails_reply__tYxg9\",\"replyText\":\"MovieDetails_replyText__jGzbu\"};","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as api from 'servises/api';\nimport CastReviews from 'components/CastReviews/CastReviews';\nimport MovieDetailsCard from 'components/MovieDetailsCard/MovieDetailsCard';\nimport { faReplyAll } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport s from '../MovieDetails/MovieDetails.module.css'\n\nfunction MovieDetails() {\n  const { moviesId } = useParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMoviesId = async () => {\n      try {\n        const moviesDetails = await api.getMoviesId(moviesId);\n\n        if (!moviesDetails) {\n          return;\n        }\n\n        setMovies(moviesDetails);\n      } catch (error) {\n        return toast.error('Please try again later');\n      }\n    };\n    fetchMoviesId();\n  }, [moviesId]);\n\n  return (\n    <>\n    <div className={s.reply}>\n      <Link to={backLinkHref} className={s.replyText}>\n        <FontAwesomeIcon icon={faReplyAll} /> Back\n      </Link>\n      </div>\n      <MovieDetailsCard movies={movies} />\n      <CastReviews />\n      <Outlet />\n    </>\n  );\n}\nexport default MovieDetails;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst api_key = '255c87d9189641f6fa37fc4c55a9531c';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${api_key}`);\n  \n  return response;\n};\n\nexport const getNameImages = async nameImages => {\n  const response = await axios.get(\n    `/search/movie?api_key=${api_key}&query=${nameImages}&language=en-US&page=1&include_adult=false`\n  );\n \n  return response;\n};\n\nexport const getMoviesId = async moviesId => {\n  const response = await axios.get(`/movie/${moviesId}?api_key=${api_key}`);\n  \n  return response.data;\n};\nexport const getCastMoviesId = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${api_key}`\n  );\n  \n  return response.data.cast;\n};\n\nexport const getReviewsMoviesId = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${api_key}`\n  );\n  \n  return response.data.results;\n};"],"names":["moviesId","useParams","backLinkHref","useLocation","state","from","className","s","NavLink","to","movies","id","poster_path","original_title","overview","vote_average","genres","src","alt","map","genre","name","useState","setMovies","useEffect","fetchMoviesId","api","moviesDetails","toast","Link","icon","faReplyAll","axios","api_key","getTrendingMovies","response","getNameImages","nameImages","getMoviesId","data","getCastMoviesId","cast","getReviewsMoviesId","results"],"sourceRoot":""}